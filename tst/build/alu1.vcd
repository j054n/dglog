$date
	Fri Jan 26 02:04:44 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module alu1_tb $end
$var wire 1 ! z $end
$var wire 1 " v $end
$var wire 32 # r [31:0] $end
$var parameter 32 $ PERIOD $end
$var parameter 32 % XLEN $end
$var reg 32 & a [31:0] $end
$var reg 32 ' b [31:0] $end
$var reg 1 ( clk $end
$var reg 4 ) op [3:0] $end
$var reg 1 * rst $end
$var integer 32 + i [31:0] $end
$var integer 32 , j [31:0] $end
$var integer 32 - k [31:0] $end
$scope module uut $end
$var wire 32 . a [31:0] $end
$var wire 32 / b [31:0] $end
$var wire 4 0 op [3:0] $end
$var wire 1 ! z $end
$var wire 1 " v $end
$var wire 32 1 s [31:0] $end
$var wire 64 2 p [63:0] $end
$var parameter 32 3 SHLEN $end
$var parameter 32 4 XLEN $end
$var reg 32 5 r [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 4
b101 3
b100000 %
b1000 $
$end
#0
$dumpvars
bx 5
bx 2
bx 1
bx 0
bx /
bx .
b0 -
b0 ,
b0 +
1*
bx )
0(
bx '
bx &
bx #
x"
x!
$end
#4
1(
#8
0(
#12
1(
#16
0(
#20
1(
b11111111111111111111111111111100 +
0*
#21
b100 ,
#24
0(
#28
0"
0!
b100 #
b100 5
b0 )
b0 0
b0 1
b1111111111111111111111111111111111111111111111111111111111110000 2
b100 '
b100 /
b11111111111111111111111111111100 &
b11111111111111111111111111111100 .
1(
#32
0(
#33
b1 -
b11 ,
b11111111111111111111111111111101 +
#36
b11111111111111111111111111111111 #
b11111111111111111111111111111111 5
b1 )
b1 0
b11 '
b11 /
b0 1
b1111111111111111111111111111111111111111111111111111111111110111 2
b11111111111111111111111111111101 &
b11111111111111111111111111111101 .
1(
#40
0(
#41
b10 -
b10 ,
b11111111111111111111111111111110 +
#44
1!
b0 #
b0 5
b10 )
b10 0
b10 '
b10 /
b0 1
b1111111111111111111111111111111111111111111111111111111111111100 2
b11111111111111111111111111111110 &
b11111111111111111111111111111110 .
1(
#48
0(
#49
b11 -
b1 ,
b11111111111111111111111111111111 +
#52
0!
b11111111111111111111111111111111 #
b11111111111111111111111111111111 5
b11 )
b11 0
b1 '
b1 /
b0 1
b1111111111111111111111111111111111111111111111111111111111111111 2
b11111111111111111111111111111111 &
b11111111111111111111111111111111 .
1(
#56
0(
#57
b100 -
b0 ,
b0 +
#60
1!
b0 #
b0 5
b100 )
b100 0
b0 '
b0 /
b0 1
b0 2
b0 &
b0 .
1(
#64
0(
#65
b101 -
b11111111111111111111111111111111 ,
b1 +
#68
x!
bx #
bx 5
b101 )
b101 0
b1111111111111111111111111111111111111111111111111111111111111111 2
b11111111111111111111111111111111 '
b11111111111111111111111111111111 /
b0 1
b1 &
b1 .
1(
#72
0(
#73
b110 -
b11111111111111111111111111111110 ,
b10 +
#76
0!
b100 #
b100 5
b110 )
b110 0
b11111111111111111111111111111110 '
b11111111111111111111111111111110 /
b0 1
b1111111111111111111111111111111111111111111111111111111111111100 2
b10 &
b10 .
1(
#80
0(
#81
b111 -
b11111111111111111111111111111101 ,
b11 +
#84
1!
b0 #
b0 5
b111 )
b111 0
b11111111111111111111111111111101 '
b11111111111111111111111111111101 /
b0 1
b1111111111111111111111111111111111111111111111111111111111110111 2
b11 &
b11 .
1(
#88
0(
#89
b1000 -
b11111111111111111111111111111100 ,
b100 +
#92
b1000 )
b1000 0
b11111111111111111111111111111100 '
b11111111111111111111111111111100 /
b0 1
b1111111111111111111111111111111111111111111111111111111111110000 2
b100 &
b100 .
1(
#96
0(
#97
b1001 -
b11111111111111111111111111111011 ,
b101 +
#100
0!
b101000000000000000000000000000 #
b101000000000000000000000000000 5
b1001 )
b1001 0
b11111111111111111111111111111011 '
b11111111111111111111111111111011 /
b0 1
b1111111111111111111111111111111111111111111111111111111111100111 2
b101 &
b101 .
1(
#104
0(
#105
b1010 -
b11111111111111111111111111111010 ,
b110 +
#108
1!
b0 #
b0 5
b1010 )
b1010 0
b11111111111111111111111111111010 '
b11111111111111111111111111111010 /
b0 1
b1111111111111111111111111111111111111111111111111111111111011100 2
b110 &
b110 .
1(
#112
0(
#113
b1011 -
b11111111111111111111111111111001 ,
b111 +
#116
x!
bx #
bx 5
b1011 )
b1011 0
b11111111111111111111111111111001 '
b11111111111111111111111111111001 /
b0 1
b1111111111111111111111111111111111111111111111111111111111001111 2
b111 &
b111 .
1(
#120
0(
#121
b1100 -
b11111111111111111111111111111000 ,
b1000 +
#124
0!
b111 #
b111 5
b1100 )
b1100 0
b11111111111111111111111111111000 '
b11111111111111111111111111111000 /
b0 1
b1111111111111111111111111111111111111111111111111111111111000000 2
b1000 &
b1000 .
1(
#128
0(
#129
b1101 -
b11111111111111111111111111110111 ,
b1001 +
#132
b11111111111111111111111111111110 #
b11111111111111111111111111111110 5
b1101 )
b1101 0
b11111111111111111111111111110111 '
b11111111111111111111111111110111 /
b0 1
b1111111111111111111111111111111111111111111111111111111110101111 2
b1001 &
b1001 .
1(
#136
0(
#137
b1110 -
b11111111111111111111111111110110 ,
b1010 +
#140
b11111111111111111111111111111111 #
b11111111111111111111111111111111 5
b1110 )
b1110 0
b11111111111111111111111111110110 '
b11111111111111111111111111110110 /
b0 1
b1111111111111111111111111111111111111111111111111111111110011100 2
b1010 &
b1010 .
1(
#144
0(
#145
b1111 -
b11111111111111111111111111110101 ,
b1011 +
#148
1!
b0 #
b0 5
b1111 )
b1111 0
b11111111111111111111111111110101 '
b11111111111111111111111111110101 /
b0 1
b1111111111111111111111111111111111111111111111111111111110000111 2
b1011 &
b1011 .
1(
#152
0(
#153
b10000 -
b11111111111111111111111111110011 ,
b1101 +
#156
1(
#160
0(
#164
1(
#168
0(
#172
1(
#176
0(
#180
1(
#184
0(
#188
1(
#192
0(
#196
1(
#200
0(
#204
1(
#208
0(
#212
1(
#216
0(
#220
1(
#224
0(
#228
1(
#232
0(
#236
1(
#240
0(
#244
1(
#248
0(
#252
1(
#256
0(
#260
1(
#264
0(
#268
1(
#272
0(
#276
1(
#280
0(
#284
1(
#288
0(
#292
1(
#296
0(
#300
1(
#304
0(
#308
1(
#312
0(
#316
1(
#320
0(
#324
1(
#328
0(
#332
1(
#336
0(
#340
1(
#344
0(
#348
1(
#352
0(
#353
